// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: goblins_service.proto

package goblins

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WorkflowEvent_EventType int32

const (
	WorkflowEvent_WORKFLOW_SCHEDULED           WorkflowEvent_EventType = 0
	WorkflowEvent_WORKFLOW_STARTED             WorkflowEvent_EventType = 1
	WorkflowEvent_WORKFLOW_FINISHED_IN_ERROR   WorkflowEvent_EventType = 2
	WorkflowEvent_WORKFLOW_FINISHED_IN_SUCCESS WorkflowEvent_EventType = 3
	WorkflowEvent_ACTIVITY_SCHEDULED           WorkflowEvent_EventType = 4
	WorkflowEvent_ACTIVITY_STARTED             WorkflowEvent_EventType = 5
	WorkflowEvent_ACTIVITY_FINISHED_IN_ERROR   WorkflowEvent_EventType = 6
	WorkflowEvent_ACTIVITY_FINISHED_IN_SUCCESS WorkflowEvent_EventType = 7
)

// Enum value maps for WorkflowEvent_EventType.
var (
	WorkflowEvent_EventType_name = map[int32]string{
		0: "WORKFLOW_SCHEDULED",
		1: "WORKFLOW_STARTED",
		2: "WORKFLOW_FINISHED_IN_ERROR",
		3: "WORKFLOW_FINISHED_IN_SUCCESS",
		4: "ACTIVITY_SCHEDULED",
		5: "ACTIVITY_STARTED",
		6: "ACTIVITY_FINISHED_IN_ERROR",
		7: "ACTIVITY_FINISHED_IN_SUCCESS",
	}
	WorkflowEvent_EventType_value = map[string]int32{
		"WORKFLOW_SCHEDULED":           0,
		"WORKFLOW_STARTED":             1,
		"WORKFLOW_FINISHED_IN_ERROR":   2,
		"WORKFLOW_FINISHED_IN_SUCCESS": 3,
		"ACTIVITY_SCHEDULED":           4,
		"ACTIVITY_STARTED":             5,
		"ACTIVITY_FINISHED_IN_ERROR":   6,
		"ACTIVITY_FINISHED_IN_SUCCESS": 7,
	}
)

func (x WorkflowEvent_EventType) Enum() *WorkflowEvent_EventType {
	p := new(WorkflowEvent_EventType)
	*p = x
	return p
}

func (x WorkflowEvent_EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkflowEvent_EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_goblins_service_proto_enumTypes[0].Descriptor()
}

func (WorkflowEvent_EventType) Type() protoreflect.EnumType {
	return &file_goblins_service_proto_enumTypes[0]
}

func (x WorkflowEvent_EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkflowEvent_EventType.Descriptor instead.
func (WorkflowEvent_EventType) EnumDescriptor() ([]byte, []int) {
	return file_goblins_service_proto_rawDescGZIP(), []int{16, 0}
}

type Task_TaskType int32

const (
	Task_WORKFLOW_TASK Task_TaskType = 0
	Task_ACTIVITY_TASK Task_TaskType = 1
)

// Enum value maps for Task_TaskType.
var (
	Task_TaskType_name = map[int32]string{
		0: "WORKFLOW_TASK",
		1: "ACTIVITY_TASK",
	}
	Task_TaskType_value = map[string]int32{
		"WORKFLOW_TASK": 0,
		"ACTIVITY_TASK": 1,
	}
)

func (x Task_TaskType) Enum() *Task_TaskType {
	p := new(Task_TaskType)
	*p = x
	return p
}

func (x Task_TaskType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Task_TaskType) Descriptor() protoreflect.EnumDescriptor {
	return file_goblins_service_proto_enumTypes[1].Descriptor()
}

func (Task_TaskType) Type() protoreflect.EnumType {
	return &file_goblins_service_proto_enumTypes[1]
}

func (x Task_TaskType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Task_TaskType.Descriptor instead.
func (Task_TaskType) EnumDescriptor() ([]byte, []int) {
	return file_goblins_service_proto_rawDescGZIP(), []int{17, 0}
}

type RegisterActivityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId string `protobuf:"bytes,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
}

func (x *RegisterActivityRequest) Reset() {
	*x = RegisterActivityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goblins_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterActivityRequest) ProtoMessage() {}

func (x *RegisterActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goblins_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterActivityRequest.ProtoReflect.Descriptor instead.
func (*RegisterActivityRequest) Descriptor() ([]byte, []int) {
	return file_goblins_service_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterActivityRequest) GetActivityId() string {
	if x != nil {
		return x.ActivityId
	}
	return ""
}

type RegisterActivityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RegisterActivityResponse) Reset() {
	*x = RegisterActivityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goblins_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterActivityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterActivityResponse) ProtoMessage() {}

func (x *RegisterActivityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goblins_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterActivityResponse.ProtoReflect.Descriptor instead.
func (*RegisterActivityResponse) Descriptor() ([]byte, []int) {
	return file_goblins_service_proto_rawDescGZIP(), []int{1}
}

type RegisterWorkflowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkflowId string `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
}

func (x *RegisterWorkflowRequest) Reset() {
	*x = RegisterWorkflowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goblins_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterWorkflowRequest) ProtoMessage() {}

func (x *RegisterWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goblins_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterWorkflowRequest.ProtoReflect.Descriptor instead.
func (*RegisterWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_goblins_service_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterWorkflowRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

type RegisterWorkflowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RegisterWorkflowResponse) Reset() {
	*x = RegisterWorkflowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goblins_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterWorkflowResponse) ProtoMessage() {}

func (x *RegisterWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goblins_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterWorkflowResponse.ProtoReflect.Descriptor instead.
func (*RegisterWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_goblins_service_proto_rawDescGZIP(), []int{3}
}

type ScheduleActivityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkflowId         string `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	WorkflowRunId      string `protobuf:"bytes,2,opt,name=workflow_run_id,json=workflowRunId,proto3" json:"workflow_run_id,omitempty"`
	ActivityId         string `protobuf:"bytes,3,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	ActivityRunId      string `protobuf:"bytes,4,opt,name=activity_run_id,json=activityRunId,proto3" json:"activity_run_id,omitempty"`
	ActivityMaxRetries int32  `protobuf:"varint,5,opt,name=activity_max_retries,json=activityMaxRetries,proto3" json:"activity_max_retries,omitempty"`
	ActivityCurrentTry int32  `protobuf:"varint,6,opt,name=activity_current_try,json=activityCurrentTry,proto3" json:"activity_current_try,omitempty"`
	Input              []byte `protobuf:"bytes,7,opt,name=input,proto3" json:"input,omitempty"`
}

func (x *ScheduleActivityRequest) Reset() {
	*x = ScheduleActivityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goblins_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleActivityRequest) ProtoMessage() {}

func (x *ScheduleActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goblins_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleActivityRequest.ProtoReflect.Descriptor instead.
func (*ScheduleActivityRequest) Descriptor() ([]byte, []int) {
	return file_goblins_service_proto_rawDescGZIP(), []int{4}
}

func (x *ScheduleActivityRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *ScheduleActivityRequest) GetWorkflowRunId() string {
	if x != nil {
		return x.WorkflowRunId
	}
	return ""
}

func (x *ScheduleActivityRequest) GetActivityId() string {
	if x != nil {
		return x.ActivityId
	}
	return ""
}

func (x *ScheduleActivityRequest) GetActivityRunId() string {
	if x != nil {
		return x.ActivityRunId
	}
	return ""
}

func (x *ScheduleActivityRequest) GetActivityMaxRetries() int32 {
	if x != nil {
		return x.ActivityMaxRetries
	}
	return 0
}

func (x *ScheduleActivityRequest) GetActivityCurrentTry() int32 {
	if x != nil {
		return x.ActivityCurrentTry
	}
	return 0
}

func (x *ScheduleActivityRequest) GetInput() []byte {
	if x != nil {
		return x.Input
	}
	return nil
}

type ScheduleActivityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ScheduleActivityResponse) Reset() {
	*x = ScheduleActivityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goblins_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleActivityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleActivityResponse) ProtoMessage() {}

func (x *ScheduleActivityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goblins_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleActivityResponse.ProtoReflect.Descriptor instead.
func (*ScheduleActivityResponse) Descriptor() ([]byte, []int) {
	return file_goblins_service_proto_rawDescGZIP(), []int{5}
}

type ScheduleWorkflowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkflowId    string `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	WorkflowRunId string `protobuf:"bytes,2,opt,name=workflow_run_id,json=workflowRunId,proto3" json:"workflow_run_id,omitempty"`
	Input         []byte `protobuf:"bytes,3,opt,name=input,proto3" json:"input,omitempty"`
}

func (x *ScheduleWorkflowRequest) Reset() {
	*x = ScheduleWorkflowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goblins_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleWorkflowRequest) ProtoMessage() {}

func (x *ScheduleWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goblins_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleWorkflowRequest.ProtoReflect.Descriptor instead.
func (*ScheduleWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_goblins_service_proto_rawDescGZIP(), []int{6}
}

func (x *ScheduleWorkflowRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *ScheduleWorkflowRequest) GetWorkflowRunId() string {
	if x != nil {
		return x.WorkflowRunId
	}
	return ""
}

func (x *ScheduleWorkflowRequest) GetInput() []byte {
	if x != nil {
		return x.Input
	}
	return nil
}

type ScheduleWorkflowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ScheduleWorkflowResponse) Reset() {
	*x = ScheduleWorkflowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goblins_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleWorkflowResponse) ProtoMessage() {}

func (x *ScheduleWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goblins_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleWorkflowResponse.ProtoReflect.Descriptor instead.
func (*ScheduleWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_goblins_service_proto_rawDescGZIP(), []int{7}
}

type GetActivityResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityRunId string `protobuf:"bytes,1,opt,name=activity_run_id,json=activityRunId,proto3" json:"activity_run_id,omitempty"`
}

func (x *GetActivityResultRequest) Reset() {
	*x = GetActivityResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goblins_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActivityResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActivityResultRequest) ProtoMessage() {}

func (x *GetActivityResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goblins_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActivityResultRequest.ProtoReflect.Descriptor instead.
func (*GetActivityResultRequest) Descriptor() ([]byte, []int) {
	return file_goblins_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetActivityResultRequest) GetActivityRunId() string {
	if x != nil {
		return x.ActivityRunId
	}
	return ""
}

type GetActivityResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Output []byte `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetActivityResultResponse) Reset() {
	*x = GetActivityResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goblins_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActivityResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActivityResultResponse) ProtoMessage() {}

func (x *GetActivityResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goblins_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActivityResultResponse.ProtoReflect.Descriptor instead.
func (*GetActivityResultResponse) Descriptor() ([]byte, []int) {
	return file_goblins_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetActivityResultResponse) GetOutput() []byte {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *GetActivityResultResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetWorkflowResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkflowRunId string `protobuf:"bytes,1,opt,name=workflow_run_id,json=workflowRunId,proto3" json:"workflow_run_id,omitempty"`
}

func (x *GetWorkflowResultRequest) Reset() {
	*x = GetWorkflowResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goblins_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkflowResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowResultRequest) ProtoMessage() {}

func (x *GetWorkflowResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goblins_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowResultRequest.ProtoReflect.Descriptor instead.
func (*GetWorkflowResultRequest) Descriptor() ([]byte, []int) {
	return file_goblins_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetWorkflowResultRequest) GetWorkflowRunId() string {
	if x != nil {
		return x.WorkflowRunId
	}
	return ""
}

type GetWorkflowResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Output []byte `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetWorkflowResultResponse) Reset() {
	*x = GetWorkflowResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goblins_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkflowResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowResultResponse) ProtoMessage() {}

func (x *GetWorkflowResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goblins_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowResultResponse.ProtoReflect.Descriptor instead.
func (*GetWorkflowResultResponse) Descriptor() ([]byte, []int) {
	return file_goblins_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetWorkflowResultResponse) GetOutput() []byte {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *GetWorkflowResultResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetActivityRunHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityRunId string `protobuf:"bytes,1,opt,name=activity_run_id,json=activityRunId,proto3" json:"activity_run_id,omitempty"`
}

func (x *GetActivityRunHistoryRequest) Reset() {
	*x = GetActivityRunHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goblins_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActivityRunHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActivityRunHistoryRequest) ProtoMessage() {}

func (x *GetActivityRunHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goblins_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActivityRunHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetActivityRunHistoryRequest) Descriptor() ([]byte, []int) {
	return file_goblins_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetActivityRunHistoryRequest) GetActivityRunId() string {
	if x != nil {
		return x.ActivityRunId
	}
	return ""
}

type GetActivityRunHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventList []*WorkflowEvent `protobuf:"bytes,1,rep,name=event_list,json=eventList,proto3" json:"event_list,omitempty"`
}

func (x *GetActivityRunHistoryResponse) Reset() {
	*x = GetActivityRunHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goblins_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActivityRunHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActivityRunHistoryResponse) ProtoMessage() {}

func (x *GetActivityRunHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goblins_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActivityRunHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetActivityRunHistoryResponse) Descriptor() ([]byte, []int) {
	return file_goblins_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetActivityRunHistoryResponse) GetEventList() []*WorkflowEvent {
	if x != nil {
		return x.EventList
	}
	return nil
}

type GetWorkflowRunHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkflowRunId string `protobuf:"bytes,1,opt,name=workflow_run_id,json=workflowRunId,proto3" json:"workflow_run_id,omitempty"`
}

func (x *GetWorkflowRunHistoryRequest) Reset() {
	*x = GetWorkflowRunHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goblins_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkflowRunHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowRunHistoryRequest) ProtoMessage() {}

func (x *GetWorkflowRunHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goblins_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowRunHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetWorkflowRunHistoryRequest) Descriptor() ([]byte, []int) {
	return file_goblins_service_proto_rawDescGZIP(), []int{14}
}

func (x *GetWorkflowRunHistoryRequest) GetWorkflowRunId() string {
	if x != nil {
		return x.WorkflowRunId
	}
	return ""
}

type GetWorkflowRunHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventList []*WorkflowEvent `protobuf:"bytes,1,rep,name=event_list,json=eventList,proto3" json:"event_list,omitempty"`
}

func (x *GetWorkflowRunHistoryResponse) Reset() {
	*x = GetWorkflowRunHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goblins_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkflowRunHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowRunHistoryResponse) ProtoMessage() {}

func (x *GetWorkflowRunHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goblins_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowRunHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetWorkflowRunHistoryResponse) Descriptor() ([]byte, []int) {
	return file_goblins_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetWorkflowRunHistoryResponse) GetEventList() []*WorkflowEvent {
	if x != nil {
		return x.EventList
	}
	return nil
}

type WorkflowEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventType          WorkflowEvent_EventType `protobuf:"varint,1,opt,name=event_type,json=eventType,proto3,enum=goblins.WorkflowEvent_EventType" json:"event_type,omitempty"`
	EmittedAt          *timestamppb.Timestamp  `protobuf:"bytes,2,opt,name=emitted_at,json=emittedAt,proto3" json:"emitted_at,omitempty"`
	WorkflowId         string                  `protobuf:"bytes,3,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	WorkflowRunId      string                  `protobuf:"bytes,4,opt,name=workflow_run_id,json=workflowRunId,proto3" json:"workflow_run_id,omitempty"`
	ActivityId         string                  `protobuf:"bytes,5,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	ActivityRunId      string                  `protobuf:"bytes,6,opt,name=activity_run_id,json=activityRunId,proto3" json:"activity_run_id,omitempty"`
	ActivityMaxRetries int32                   `protobuf:"varint,7,opt,name=activity_max_retries,json=activityMaxRetries,proto3" json:"activity_max_retries,omitempty"`
	ActivityCurrentTry int32                   `protobuf:"varint,8,opt,name=activity_current_try,json=activityCurrentTry,proto3" json:"activity_current_try,omitempty"`
	Input              []byte                  `protobuf:"bytes,9,opt,name=input,proto3" json:"input,omitempty"`
	Output             []byte                  `protobuf:"bytes,10,opt,name=output,proto3,oneof" json:"output,omitempty"`
	Error              *string                 `protobuf:"bytes,11,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *WorkflowEvent) Reset() {
	*x = WorkflowEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goblins_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowEvent) ProtoMessage() {}

func (x *WorkflowEvent) ProtoReflect() protoreflect.Message {
	mi := &file_goblins_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowEvent.ProtoReflect.Descriptor instead.
func (*WorkflowEvent) Descriptor() ([]byte, []int) {
	return file_goblins_service_proto_rawDescGZIP(), []int{16}
}

func (x *WorkflowEvent) GetEventType() WorkflowEvent_EventType {
	if x != nil {
		return x.EventType
	}
	return WorkflowEvent_WORKFLOW_SCHEDULED
}

func (x *WorkflowEvent) GetEmittedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EmittedAt
	}
	return nil
}

func (x *WorkflowEvent) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *WorkflowEvent) GetWorkflowRunId() string {
	if x != nil {
		return x.WorkflowRunId
	}
	return ""
}

func (x *WorkflowEvent) GetActivityId() string {
	if x != nil {
		return x.ActivityId
	}
	return ""
}

func (x *WorkflowEvent) GetActivityRunId() string {
	if x != nil {
		return x.ActivityRunId
	}
	return ""
}

func (x *WorkflowEvent) GetActivityMaxRetries() int32 {
	if x != nil {
		return x.ActivityMaxRetries
	}
	return 0
}

func (x *WorkflowEvent) GetActivityCurrentTry() int32 {
	if x != nil {
		return x.ActivityCurrentTry
	}
	return 0
}

func (x *WorkflowEvent) GetInput() []byte {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *WorkflowEvent) GetOutput() []byte {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *WorkflowEvent) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskType           Task_TaskType `protobuf:"varint,1,opt,name=task_type,json=taskType,proto3,enum=goblins.Task_TaskType" json:"task_type,omitempty"`
	WorkflowId         string        `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	WorkflowRunId      string        `protobuf:"bytes,3,opt,name=workflow_run_id,json=workflowRunId,proto3" json:"workflow_run_id,omitempty"`
	ActivityId         string        `protobuf:"bytes,4,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	ActivityRunId      string        `protobuf:"bytes,5,opt,name=activity_run_id,json=activityRunId,proto3" json:"activity_run_id,omitempty"`
	ActivityMaxRetries int32         `protobuf:"varint,6,opt,name=activity_max_retries,json=activityMaxRetries,proto3" json:"activity_max_retries,omitempty"`
	ActivityCurrentTry int32         `protobuf:"varint,7,opt,name=activity_current_try,json=activityCurrentTry,proto3" json:"activity_current_try,omitempty"`
	Input              []byte        `protobuf:"bytes,8,opt,name=input,proto3" json:"input,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goblins_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_goblins_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_goblins_service_proto_rawDescGZIP(), []int{17}
}

func (x *Task) GetTaskType() Task_TaskType {
	if x != nil {
		return x.TaskType
	}
	return Task_WORKFLOW_TASK
}

func (x *Task) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *Task) GetWorkflowRunId() string {
	if x != nil {
		return x.WorkflowRunId
	}
	return ""
}

func (x *Task) GetActivityId() string {
	if x != nil {
		return x.ActivityId
	}
	return ""
}

func (x *Task) GetActivityRunId() string {
	if x != nil {
		return x.ActivityRunId
	}
	return ""
}

func (x *Task) GetActivityMaxRetries() int32 {
	if x != nil {
		return x.ActivityMaxRetries
	}
	return 0
}

func (x *Task) GetActivityCurrentTry() int32 {
	if x != nil {
		return x.ActivityCurrentTry
	}
	return 0
}

func (x *Task) GetInput() []byte {
	if x != nil {
		return x.Input
	}
	return nil
}

var File_goblins_service_proto protoreflect.FileDescriptor

var file_goblins_service_proto_rawDesc = []byte{
	0x0a, 0x15, 0x67, 0x6f, 0x62, 0x6c, 0x69, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x67, 0x6f, 0x62, 0x6c, 0x69, 0x6e, 0x73,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x3a, 0x0a, 0x17, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x1a, 0x0a,
	0x18, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x0a, 0x17, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x49, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xa5, 0x02, 0x0a, 0x17, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x26,
	0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x52, 0x75, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e, 0x49, 0x64, 0x12,
	0x30, 0x0a, 0x14, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x61, 0x78, 0x5f,
	0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x12, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x54, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x78, 0x0a, 0x17, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x72, 0x75,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x52, 0x75, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x22,
	0x1a, 0x0a, 0x18, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e, 0x49, 0x64, 0x22,
	0x49, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x42, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x75, 0x6e, 0x49, 0x64, 0x22, 0x49,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x46, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e, 0x49,
	0x64, 0x22, 0x56, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x52, 0x75, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x62, 0x6c, 0x69, 0x6e, 0x73,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x09,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x46, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x75, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x75, 0x6e, 0x49,
	0x64, 0x22, 0x56, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x52, 0x75, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x62, 0x6c, 0x69, 0x6e, 0x73,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x09,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xd2, 0x05, 0x0a, 0x0d, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x0a, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x67, 0x6f, 0x62, 0x6c, 0x69, 0x6e, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x0a,
	0x65, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x6d,
	0x69, 0x74, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x75, 0x6e, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x75,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x22, 0xeb, 0x01, 0x0a, 0x09,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x57, 0x4f, 0x52,
	0x4b, 0x46, 0x4c, 0x4f, 0x57, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x57, 0x4f, 0x52, 0x4b, 0x46, 0x4c, 0x4f, 0x57, 0x5f, 0x53, 0x54,
	0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x57, 0x4f, 0x52, 0x4b, 0x46,
	0x4c, 0x4f, 0x57, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x5f, 0x49, 0x4e, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c, 0x57, 0x4f, 0x52, 0x4b, 0x46,
	0x4c, 0x4f, 0x57, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x5f, 0x49, 0x4e, 0x5f,
	0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x43, 0x54,
	0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x44, 0x10,
	0x04, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x54,
	0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x05, 0x12, 0x1e, 0x0a, 0x1a, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x49, 0x54, 0x59, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x5f, 0x49, 0x4e, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x06, 0x12, 0x20, 0x0a, 0x1c, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x49, 0x54, 0x59, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x5f, 0x49, 0x4e, 0x5f,
	0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x07, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xf9,
	0x02, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x33, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x62,
	0x6c, 0x69, 0x6e, 0x73, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x52, 0x75, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e, 0x49, 0x64, 0x12, 0x30,
	0x0a, 0x14, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x72,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x30, 0x0a, 0x14, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54,
	0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x30, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x57, 0x4f, 0x52, 0x4b, 0x46, 0x4c, 0x4f, 0x57,
	0x5f, 0x54, 0x41, 0x53, 0x4b, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x49, 0x54, 0x59, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x10, 0x01, 0x32, 0x8c, 0x06, 0x0a, 0x0e, 0x47,
	0x6f, 0x62, 0x6c, 0x69, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x59, 0x0a,
	0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x12, 0x20, 0x2e, 0x67, 0x6f, 0x62, 0x6c, 0x69, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x67, 0x6f, 0x62, 0x6c, 0x69, 0x6e, 0x73, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x20, 0x2e, 0x67,
	0x6f, 0x62, 0x6c, 0x69, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x67, 0x6f, 0x62, 0x6c, 0x69, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x10, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x20, 0x2e, 0x67, 0x6f, 0x62, 0x6c, 0x69, 0x6e,
	0x73, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x67, 0x6f, 0x62, 0x6c,
	0x69, 0x6e, 0x73, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59,
	0x0a, 0x10, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x12, 0x20, 0x2e, 0x67, 0x6f, 0x62, 0x6c, 0x69, 0x6e, 0x73, 0x2e, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x67, 0x6f, 0x62, 0x6c, 0x69, 0x6e, 0x73, 0x2e, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x21,
	0x2e, 0x67, 0x6f, 0x62, 0x6c, 0x69, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x67, 0x6f, 0x62, 0x6c, 0x69, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x21, 0x2e, 0x67,
	0x6f, 0x62, 0x6c, 0x69, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x67, 0x6f, 0x62, 0x6c, 0x69, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x25,
	0x2e, 0x67, 0x6f, 0x62, 0x6c, 0x69, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x67, 0x6f, 0x62, 0x6c, 0x69, 0x6e, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x68, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x75,
	0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x25, 0x2e, 0x67, 0x6f, 0x62, 0x6c, 0x69,
	0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x75,
	0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x67, 0x6f, 0x62, 0x6c, 0x69, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x75, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x23, 0x5a, 0x21, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x69, 0x63, 0x6f, 0x6c, 0x61, 0x73, 0x44,
	0x75, 0x74, 0x72, 0x6f, 0x6e, 0x63, 0x2f, 0x67, 0x6f, 0x62, 0x6c, 0x69, 0x6e, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_goblins_service_proto_rawDescOnce sync.Once
	file_goblins_service_proto_rawDescData = file_goblins_service_proto_rawDesc
)

func file_goblins_service_proto_rawDescGZIP() []byte {
	file_goblins_service_proto_rawDescOnce.Do(func() {
		file_goblins_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_goblins_service_proto_rawDescData)
	})
	return file_goblins_service_proto_rawDescData
}

var file_goblins_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_goblins_service_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_goblins_service_proto_goTypes = []interface{}{
	(WorkflowEvent_EventType)(0),          // 0: goblins.WorkflowEvent.EventType
	(Task_TaskType)(0),                    // 1: goblins.Task.TaskType
	(*RegisterActivityRequest)(nil),       // 2: goblins.RegisterActivityRequest
	(*RegisterActivityResponse)(nil),      // 3: goblins.RegisterActivityResponse
	(*RegisterWorkflowRequest)(nil),       // 4: goblins.RegisterWorkflowRequest
	(*RegisterWorkflowResponse)(nil),      // 5: goblins.RegisterWorkflowResponse
	(*ScheduleActivityRequest)(nil),       // 6: goblins.ScheduleActivityRequest
	(*ScheduleActivityResponse)(nil),      // 7: goblins.ScheduleActivityResponse
	(*ScheduleWorkflowRequest)(nil),       // 8: goblins.ScheduleWorkflowRequest
	(*ScheduleWorkflowResponse)(nil),      // 9: goblins.ScheduleWorkflowResponse
	(*GetActivityResultRequest)(nil),      // 10: goblins.GetActivityResultRequest
	(*GetActivityResultResponse)(nil),     // 11: goblins.GetActivityResultResponse
	(*GetWorkflowResultRequest)(nil),      // 12: goblins.GetWorkflowResultRequest
	(*GetWorkflowResultResponse)(nil),     // 13: goblins.GetWorkflowResultResponse
	(*GetActivityRunHistoryRequest)(nil),  // 14: goblins.GetActivityRunHistoryRequest
	(*GetActivityRunHistoryResponse)(nil), // 15: goblins.GetActivityRunHistoryResponse
	(*GetWorkflowRunHistoryRequest)(nil),  // 16: goblins.GetWorkflowRunHistoryRequest
	(*GetWorkflowRunHistoryResponse)(nil), // 17: goblins.GetWorkflowRunHistoryResponse
	(*WorkflowEvent)(nil),                 // 18: goblins.WorkflowEvent
	(*Task)(nil),                          // 19: goblins.Task
	(*timestamppb.Timestamp)(nil),         // 20: google.protobuf.Timestamp
}
var file_goblins_service_proto_depIdxs = []int32{
	18, // 0: goblins.GetActivityRunHistoryResponse.event_list:type_name -> goblins.WorkflowEvent
	18, // 1: goblins.GetWorkflowRunHistoryResponse.event_list:type_name -> goblins.WorkflowEvent
	0,  // 2: goblins.WorkflowEvent.event_type:type_name -> goblins.WorkflowEvent.EventType
	20, // 3: goblins.WorkflowEvent.emitted_at:type_name -> google.protobuf.Timestamp
	1,  // 4: goblins.Task.task_type:type_name -> goblins.Task.TaskType
	2,  // 5: goblins.GoblinsService.RegisterActivity:input_type -> goblins.RegisterActivityRequest
	4,  // 6: goblins.GoblinsService.RegisterWorkflow:input_type -> goblins.RegisterWorkflowRequest
	6,  // 7: goblins.GoblinsService.ScheduleActivity:input_type -> goblins.ScheduleActivityRequest
	8,  // 8: goblins.GoblinsService.ScheduleWorkflow:input_type -> goblins.ScheduleWorkflowRequest
	10, // 9: goblins.GoblinsService.GetActivityResult:input_type -> goblins.GetActivityResultRequest
	12, // 10: goblins.GoblinsService.GetWorkflowResult:input_type -> goblins.GetWorkflowResultRequest
	14, // 11: goblins.GoblinsService.GetActivityRunHistory:input_type -> goblins.GetActivityRunHistoryRequest
	16, // 12: goblins.GoblinsService.GetWorkflowRunHistory:input_type -> goblins.GetWorkflowRunHistoryRequest
	3,  // 13: goblins.GoblinsService.RegisterActivity:output_type -> goblins.RegisterActivityResponse
	5,  // 14: goblins.GoblinsService.RegisterWorkflow:output_type -> goblins.RegisterWorkflowResponse
	7,  // 15: goblins.GoblinsService.ScheduleActivity:output_type -> goblins.ScheduleActivityResponse
	9,  // 16: goblins.GoblinsService.ScheduleWorkflow:output_type -> goblins.ScheduleWorkflowResponse
	11, // 17: goblins.GoblinsService.GetActivityResult:output_type -> goblins.GetActivityResultResponse
	13, // 18: goblins.GoblinsService.GetWorkflowResult:output_type -> goblins.GetWorkflowResultResponse
	15, // 19: goblins.GoblinsService.GetActivityRunHistory:output_type -> goblins.GetActivityRunHistoryResponse
	17, // 20: goblins.GoblinsService.GetWorkflowRunHistory:output_type -> goblins.GetWorkflowRunHistoryResponse
	13, // [13:21] is the sub-list for method output_type
	5,  // [5:13] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_goblins_service_proto_init() }
func file_goblins_service_proto_init() {
	if File_goblins_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_goblins_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterActivityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goblins_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterActivityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goblins_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterWorkflowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goblins_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterWorkflowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goblins_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleActivityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goblins_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleActivityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goblins_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleWorkflowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goblins_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleWorkflowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goblins_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActivityResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goblins_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActivityResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goblins_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkflowResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goblins_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkflowResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goblins_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActivityRunHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goblins_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActivityRunHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goblins_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkflowRunHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goblins_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkflowRunHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goblins_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goblins_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_goblins_service_proto_msgTypes[16].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_goblins_service_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_goblins_service_proto_goTypes,
		DependencyIndexes: file_goblins_service_proto_depIdxs,
		EnumInfos:         file_goblins_service_proto_enumTypes,
		MessageInfos:      file_goblins_service_proto_msgTypes,
	}.Build()
	File_goblins_service_proto = out.File
	file_goblins_service_proto_rawDesc = nil
	file_goblins_service_proto_goTypes = nil
	file_goblins_service_proto_depIdxs = nil
}
