syntax = "proto3";

package goblinsservice;

import "shared/event/event.proto";

option go_package = "github.com/NicolasDutronc/goblins/shared/goblins_service";

service GoblinsService {
  rpc RegisterActivity(RegisterActivityRequest) returns (RegisterActivityResponse) {}

  rpc RegisterWorkflow(RegisterWorkflowRequest) returns (RegisterWorkflowResponse) {}

  rpc ScheduleActivity(ScheduleActivityRequest) returns (ScheduleActivityResponse) {}

  rpc ScheduleWorkflow(ScheduleWorkflowRequest) returns (ScheduleWorkflowResponse) {}
  
  rpc GetActivityResult(GetActivityResultRequest) returns (GetActivityResultResponse) {}

  rpc GetWorkflowResult(GetWorkflowResultRequest) returns (GetWorkflowResultResponse) {}

  rpc GetActivityRunHistory(GetActivityRunHistoryRequest) returns (GetActivityRunHistoryResponse) {}

  rpc GetWorkflowRunHistory(GetWorkflowRunHistoryRequest) returns (GetWorkflowRunHistoryResponse) {}
}

message RegisterActivityRequest {
  string activity_id = 1;
}

message RegisterActivityResponse {}

message RegisterWorkflowRequest {
  string workflow_id = 1;
}

message RegisterWorkflowResponse {}

message ScheduleActivityRequest {
  string workflow_id = 1;
  string workflow_run_id = 2;
  string activity_id = 3;
  string activity_run_id = 4;
  int32 activity_max_retries = 5;
  int32 activity_current_try = 6;
  bytes input = 7;
}

message ScheduleActivityResponse {}

message ScheduleWorkflowRequest {
  string workflow_id = 1;
  string workflow_run_id = 2;
  bytes input = 3;
}

message ScheduleWorkflowResponse {}

message GetActivityResultRequest {
  string workflow_run_id = 1;
  string activity_run_id = 2;
}

message GetActivityResultResponse {
  bytes output = 1;
  string error = 2;
}

message GetWorkflowResultRequest {
  string workflow_run_id = 1;
}

message GetWorkflowResultResponse {
  bytes output = 1;
  string error = 2;
}

message GetActivityRunHistoryRequest {
  string workflow_run_id = 1;
  string activity_run_id = 2;
}

message GetActivityRunHistoryResponse {
  repeated event.WorkflowEvent event_list = 1;
}

message GetWorkflowRunHistoryRequest {
  string workflow_run_id = 1;
}

message GetWorkflowRunHistoryResponse {
  repeated event.WorkflowEvent event_list = 1;
}